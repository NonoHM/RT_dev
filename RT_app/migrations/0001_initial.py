# Generated by Django 4.1.7 on 2023-05-20 11:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Entretien",
            fields=[
                (
                    "id",
                    models.AutoField(editable=False, primary_key=True, serialize=False),
                ),
                ("nom", models.CharField(default="Mise à jour", max_length=30)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("PREVENTIF", "Préventif"),
                            ("CORRECTIF", "Correctif"),
                            ("AMELIORATION", "Amélioration"),
                            ("MISE A JOUR", "Mise à jour"),
                            ("REPARATION", "Réparation"),
                            ("AUTRE", "Autre"),
                        ],
                        default="PREVENTIF",
                        max_length=15,
                    ),
                ),
                ("description", models.TextField()),
                ("date", models.DateField(default="2023-05-20")),
                ("etat", models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name="Infrastructure",
            fields=[
                (
                    "id",
                    models.AutoField(editable=False, primary_key=True, serialize=False),
                ),
                ("nom", models.CharField(max_length=40)),
                ("pays", models.CharField(max_length=30)),
                ("ville", models.CharField(max_length=64)),
                (
                    "coordonnees",
                    models.CharField(
                        blank=True,
                        max_length=18,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)\\s*[-+]?([1-9]?\\d(\\.\\d+)?|1[0-7]\\d(\\.\\d+)?|180(\\.0+)?)$"
                            )
                        ],
                    ),
                ),
                (
                    "ip_reseau",
                    models.CharField(
                        default="192.168.0.0",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)\\.?\\b){4}$"
                            )
                        ],
                    ),
                ),
                (
                    "masque",
                    models.CharField(
                        default="255.255.255.0",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^(?:128|192|224|240|248|252|254|255)\\.(?:0|128|192|224|240|248|252|254|255)\\.(?:0|128|192|224|240|248|252|254|255)\\.(?:0|128|192|224|240|248|252|254|255)$"
                            )
                        ],
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Personnel",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.AutoField(editable=False, primary_key=True, serialize=False),
                ),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "id_infrastructure",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="RT_app.infrastructure",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Machine",
            fields=[
                (
                    "id",
                    models.AutoField(editable=False, primary_key=True, serialize=False),
                ),
                ("nom", models.CharField(default="PC", max_length=30)),
                (
                    "ip",
                    models.CharField(
                        default="172.0.0.1",
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^((25[0-5]|(2[0-4]|1\\d|[1-9]|)\\d)\\.?\\b){4}$"
                            )
                        ],
                    ),
                ),
                ("etat", models.BooleanField(default=True)),
                (
                    "type_machine",
                    models.CharField(
                        choices=[
                            ("PC", "PC - OS windows"),
                            ("Mac", "Mac - OS MacOS"),
                            ("Serveur", "Serveur - OS Debian"),
                            ("Autre", "Autre type de machine"),
                        ],
                        default="PC",
                        max_length=32,
                    ),
                ),
                (
                    "id_infrastructure",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="RT_app.infrastructure",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="infrastructure",
            name="id_personnel",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
        migrations.CreateModel(
            name="Entretien_detail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "id_entretien",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="RT_app.entretien",
                    ),
                ),
                (
                    "id_machine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="RT_app.machine"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="entretien",
            name="id_machine",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="RT_app.machine"
            ),
        ),
        migrations.AddField(
            model_name="entretien",
            name="id_personnel",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
            ),
        ),
    ]
